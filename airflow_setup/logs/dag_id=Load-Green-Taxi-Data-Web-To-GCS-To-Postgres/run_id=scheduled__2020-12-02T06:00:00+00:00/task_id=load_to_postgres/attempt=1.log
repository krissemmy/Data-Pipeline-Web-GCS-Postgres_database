[2023-10-02T10:16:57.280+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Load-Green-Taxi-Data-Web-To-GCS-To-Postgres.load_to_postgres scheduled__2020-12-02T06:00:00+00:00 [queued]>
[2023-10-02T10:16:57.299+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Load-Green-Taxi-Data-Web-To-GCS-To-Postgres.load_to_postgres scheduled__2020-12-02T06:00:00+00:00 [queued]>
[2023-10-02T10:16:57.299+0000] {taskinstance.py:1308} INFO - Starting attempt 1 of 3
[2023-10-02T10:16:57.422+0000] {taskinstance.py:1327} INFO - Executing <Task(PythonOperator): load_to_postgres> on 2020-12-02 06:00:00+00:00
[2023-10-02T10:16:57.431+0000] {standard_task_runner.py:57} INFO - Started process 436 to run task
[2023-10-02T10:16:57.435+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'Load-Green-Taxi-Data-Web-To-GCS-To-Postgres', 'load_to_postgres', 'scheduled__2020-12-02T06:00:00+00:00', '--job-id', '750', '--raw', '--subdir', 'DAGS_FOLDER/web_gcs_pg.py', '--cfg-path', '/tmp/tmp0na3gauo']
[2023-10-02T10:16:57.438+0000] {standard_task_runner.py:85} INFO - Job 750: Subtask load_to_postgres
[2023-10-02T10:16:57.605+0000] {task_command.py:410} INFO - Running <TaskInstance: Load-Green-Taxi-Data-Web-To-GCS-To-Postgres.load_to_postgres scheduled__2020-12-02T06:00:00+00:00 [running]> on host 537710aea1a2
[2023-10-02T10:16:57.881+0000] {taskinstance.py:1547} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='Load-Green-Taxi-Data-Web-To-GCS-To-Postgres' AIRFLOW_CTX_TASK_ID='load_to_postgres' AIRFLOW_CTX_EXECUTION_DATE='2020-12-02T06:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2020-12-02T06:00:00+00:00'
[2023-10-02T10:16:57.883+0000] {postgres.py:159} INFO - Running copy expert: 
		    -- create green table
		    -- CREATE TABLE IF NOT EXISTS green_taxi (
		    --     VendorID INT,
		    --     lpep_pickup_datetime TIMESTAMP,
		    --     lpep_dropoff_datetime TIMESTAMP,
		    --    store_and_fwd_flag VARCHAR,
		    --     RatecodeID FLOAT,
		    --     PULocationID FLOAT,
		    --     DOLocationID FLOAT,
		    --     passenger_count FLOAT,
		    --     trip_distance FLOAT,
		    --     fare_amount FLOAT,
		    --     extra FLOAT,
		    --     mta_tax FLOAT,
		    --     tip_amount FLOAT,
		    --     tolls_amount FLOAT,
		    --     ehail_fee FLOAT,
		    --     improvement_surcharge FLOAT,
		    --     total_amount FLOAT,
		    --     payment_type FLOAT,
		    --     trip_type FLOAT,
		    --     congestion_surcharge FLOAT
		    -- );

		    -- ingest data
		    COPY green_taxi FROM STDIN;
		    
			, filename: green_tripdata_{{ dag_run.logical_date.strftime('%Y-%m') }}.csv
[2023-10-02T10:16:57.892+0000] {base.py:73} INFO - Using connection ID 'my_postgres_conn' for task execution.
[2023-10-02T10:16:57.909+0000] {python.py:183} INFO - Done. Returned value was: None
[2023-10-02T10:16:57.920+0000] {taskinstance.py:1350} INFO - Marking task as SUCCESS. dag_id=Load-Green-Taxi-Data-Web-To-GCS-To-Postgres, task_id=load_to_postgres, execution_date=20201202T060000, start_date=20231002T101657, end_date=20231002T101657
[2023-10-02T10:16:57.967+0000] {local_task_job_runner.py:225} INFO - Task exited with return code 0
[2023-10-02T10:16:57.999+0000] {taskinstance.py:2653} INFO - 1 downstream tasks scheduled from follow-on schedule check
